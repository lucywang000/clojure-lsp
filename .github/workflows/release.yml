name: Release

on:
  push:
    tags:
      - 2*

jobs:
  build-jvm:
    if: startsWith(github.ref, 'refs/tags/2')
    name: Build JVM jar and embedded jar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Prepare java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install Leiningen
        uses: DeLaGuardo/setup-clojure@master
        with:
          lein: 2.9.1

      - name: Generate jar and embedded jar
        run: lein with-profile native-image bin

      - name: Get latest tag
        id: latest-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - name: Rename jar
        run: mv target/clojure-lsp-${{ steps.latest-tag.outputs.tag}}-standalone.jar clojure-lsp.jar

      - name: Upload jar
        uses: actions/upload-artifact@v2
        with:
          path: clojure-lsp.jar
          name: clojure-lsp.jar

      - name: Upload embedded jar
        uses: actions/upload-artifact@v2
        with:
          path: target/clojure-lsp
          name: clojure-lsp


  native-macos:
    name: Build native MacOS binary
    needs: build-jvm
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: clojure-lsp.jar

      - name: Install Leiningen
        uses: DeLaGuardo/setup-clojure@master
        with:
          lein: 2.9.1

      - name: Install Babashka
        run: curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install | sudo bash

      - name: Install GraalVM
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm-version: 21.0.0.java11

      - name: Install native-image component
        run: |
          gu install native-image

      - name: Build MacOS native image
        env:
          CLOJURE_LSP_JAR: clojure-lsp.jar
          CLOJURE_LSP_XMX: "-J-Xmx6g"
        run: |
          graalvm/native-unix-compile.sh

      # UPX is not working for MacOS Big Sur
      # - name: Compress binary
      #   uses: svenstaro/upx-action@v2
      #   with:
      #     file: clojure-lsp

      - name: Run integration tests
        run: |
          bb integration-test/run-all.clj ./clojure-lsp

      - name: Zip binary
        run: zip clojure-lsp-native-macos-amd64.zip clojure-lsp

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: clojure-lsp-native-macos-amd64.zip
          name: clojure-lsp-native-macos-amd64.zip

  native-windows:
    name: Build native Windows binary
    needs: build-jvm
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: clojure-lsp.jar

      - name: Install Leiningen
        uses: DeLaGuardo/setup-clojure@master
        with:
          lein: 2.9.1

      - name: Install Babashka
        run: |
          iwr -useb get.scoop.sh | iex
          scoop bucket add scoop-clojure https://github.com/littleli/scoop-clojure
          scoop bucket add extras
          scoop install babashka --independent
          echo "$HOME\scoop\shims" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install GraalVM
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm-version: 21.0.0.java11

      - name: Install native-image component
        run: |
          gu.cmd install native-image

      - name: Build Windows native image
        env:
          CLOJURE_LSP_JAR: clojure-lsp.jar
          CLOJURE_LSP_XMX: "-J-Xmx6g"
        run: |
          .\graalvm\native-windows-compile.bat

      - name: Compress binary
        uses: svenstaro/upx-action@v2
        with:
          file: clojure-lsp.exe

      - name: Run integration tests
        continue-on-error: true # Windows return the json in the same line but for some reason clients seems to accept that.
        run: |
          bb integration-test/run-all.clj .\clojure-lsp.exe

      - name: Zip binary
        run: |
          jar -cMf clojure-lsp-native-windows-amd64.zip clojure-lsp.exe

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: clojure-lsp-native-windows-amd64.zip
          name: clojure-lsp-native-windows-amd64.zip

  release:
    name: Create Release
    needs: [build-jvm, native-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get latest tag
        id: latest-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.latest-tag.outputs.tag}}
          release_name: ${{ steps.latest-tag.outputs.tag}}

  upload-to-release:
    name: Upload artifacts to release
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get latest tag
        id: latest-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - uses: actions/download-artifact@v2

      - name: Upload JVM unix embbeded jar
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: clojure-lsp/clojure-lsp
          asset_name: clojure-lsp
          tag: ${{ steps.latest-tag.outputs.tag}}

      - name: Upload MacOS native binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: clojure-lsp-native-macos-amd64.zip/clojure-lsp-native-macos-amd64.zip
          asset_name: clojure-lsp-native-macos-amd64.zip
          tag: ${{ steps.latest-tag.outputs.tag}}
